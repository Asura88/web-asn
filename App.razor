@inject NavigationManager NavigationManager
<div class="document-content">
    <div>
        <textarea id="contents" name="contents" @bind="Contents">
        </textarea>
        <button @onclick="Decode">Decode</button>
    </div>
    <div>
        <div class="asn-tree">
            <NodeTemplate Node="RootNode" />
        </div>
    </div>
</div>

@code {
    private string Contents { get; set; } = @"0C0C48656C6C6F20576F726C6421";
    private AsnNode? RootNode { get; set; }

    protected override void OnInitialized() {
        Uri uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (uri.Query.StartsWith("?asn=", StringComparison.Ordinal)) {
            Contents = uri.Query.Substring(5);
            Decode();
        }
    }

    private void Decode() {
        byte[]? decoded = null;

        try {
            string cleaned = Contents.Replace(" ", "").ReplaceLineEndings("");
            decoded = Convert.FromHexString(cleaned);
        }
        catch {
        }

        if (decoded is null) {
            try {
                decoded = Convert.FromBase64String(Contents);
            }
            catch {
            }
        }

        if (decoded is null) {
            if (PemEncoding.TryFind(Contents, out PemFields fields)) {
                decoded = Convert.FromBase64String(Contents[fields.Base64Data]);
            }
        }

        if (decoded is null) {
            RootNode = null;
            return;
        }

        try {
            AsnWalkContext context = new(decoded);
            AsnWalker walker = new(context, decoded);
            AsnNode node = walker.Walk().First();
            RootNode = node;
        }
        catch {
            RootNode = null;
        }
    }
}
